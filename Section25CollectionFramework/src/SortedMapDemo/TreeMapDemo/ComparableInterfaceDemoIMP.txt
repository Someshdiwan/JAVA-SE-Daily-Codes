Breakdown:

Implements Comparable<Point>:

This allows Point objects to be compared so that TreeSet can maintain sorting.

Using <Point> removes the need for explicit type casting.

Constructor (public Point(int x, int y)):

Initializes the x and y coordinates of a point.

toString() Method:

Overridden to print Point objects in a readable format (e.g., X=1 Y=1).

compareTo(Point p) Method:

Defines how Point objects should be sorted in TreeSet:

First, compare x values.

If x values are equal, compare y values.

The Integer.compare(a, b) method is a concise way to compare integers.

2. Using TreeSet in main()

public class ComparableInterfaceDemoIMP {
    public static void main(String[] args) {
        TreeSet<Point> TS = new TreeSet<>(); // TreeSet to store sorted Point objects

        TS.add(new Point(1, 1));
        TS.add(new Point(5, 5));
        TS.add(new Point(5, 2));

        System.out.println(TS);
    }
}

Breakdown:

Creates a TreeSet<Point>:

TreeSet is a sorted set that automatically orders elements as per compareTo().

Adds Point objects:

TS.add(new Point(1, 1));
TS.add(new Point(5, 5));
TS.add(new Point(5, 2));

How Sorting Works in TreeSet:

First sorts by x-coordinate (x values).
If x values are equal, sorts by y-coordinate.

Expected Output (Sorted Order):

[X=1 Y=1, X=5 Y=2, X=5 Y=5](1,1) 

comes first (smallest x).

(5,2) comes before (5,5) because 2 < 5.

Key Takeaways

✅ Why Use TreeSet?

Automatically sorts elements. No duplicates allowed. Uses a Balanced Binary Search Tree (Red-Black Tree) for ordering.

✅ Why Implement Comparable?

TreeSet needs to know how to compare and sort objects.

The compareTo() method ensures TreeSet orders Point objects correctly.

✅ Best Practices Followed:

Used Comparable<Point> to avoid casting.

Used Integer.compare(a, b) for cleaner code.

Maintains sorting logic inside Point class, making it reusable.

Summary:

program successfully stores Point objects in a TreeSet while ensuring sorting by x and then y. 

The compareTo() method defines the sorting order, and TreeSet handles the storage automatically.